@using WebApp.Models.OrderModels
@model OrderDetailViewModel

@{
    ViewData["Title"] = "Szczegóły zamówienia";
}

<h2>Szczegóły zamówienia</h2>

<div>
    <h4>Zamówienie</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Apothecary.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Apothecary.FirstName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Apothecary.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Apothecary.LastName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderCreationDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderCreationDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SendOrderDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SendOrderDate)
        </dd>
    </dl>

    <div class="btn-group">
        <button onclick="location.href='@Url.Action("Index","Order")'"
                class="btn btn-default">
            <span class="glyphicon glyphicon-arrow-left"></span>
            <span>Powrót do listy</span>
        </button>
        <button onclick="location.href='@Url.Action("AddOrderItem","Order", new { orderId = Model.Id })'"
                class="btn btn-default">
            <span class="glyphicon glyphicon-plus"></span>
            <span>Dodaj lek do zamówienia</span>
        </button>
        <button onclick="location.href='@Url.Action("SendOrder","Order", new { orderId = Model.Id })'"
                class="btn btn-default">
            <span class="glyphicon glyphicon-send"></span>
            <span>Zamów</span>
        </button>
    </div>

    <h4>Leki na zamówieniu</h4>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Medicine.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Medicine.MedType)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Medicine.MedicineContent)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Items.First().Quantity)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Medicine.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Medicine.MedType)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Medicine.MedicineContent)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <!--<td>
                        @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                        @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                    </td>-->
                </tr>
            }
        </tbody>
    </table>
</div>
